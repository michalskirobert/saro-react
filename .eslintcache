[{"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\index.js":"1","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\App.js":"2","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\config\\serviceWorker.js":"3","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\index.js":"4","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\Unlisten.js":"5","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\PrivateRoute.js":"6","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\SaroRoute.js":"7","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\footer\\Footer.js":"8","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\lessons\\Lessons.js":"9","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Nav.jsx":"10","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Sidebar.jsx":"11","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\about\\About.jsx":"12","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\404\\Error.jsx":"13","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\Home.jsx":"14","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\Blog.jsx":"15","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\profile\\Settings.jsx":"16","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\profile\\User.jsx":"17","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\AdminTranslate.jsx":"18","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\dashboard\\Dashboard.jsx":"19","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddArticle.jsx":"20","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddEvents.jsx":"21","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\Edit.jsx":"22","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\panel\\AdminPanel.jsx":"23","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\Login.jsx":"24","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SignUp.jsx":"25","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddNews.jsx":"26","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\index.js":"27","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\firebase\\index.js":"28","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\index.js":"29","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\utils.js":"30","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\contact\\index.jsx":"31","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\validation.js":"32","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\container.js":"33","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\panel\\utils.js":"34","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\container.js":"35","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\container.js":"36","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\hero\\Main.js":"37","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\NavMenu.jsx":"38","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Logo.jsx":"39","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\PolishLearning.jsx":"40","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\Introduction.jsx":"41","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\PartnerNearYou.jsx":"42","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\SingleArticle.jsx":"43","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\index.js":"44","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\LoginForm.jsx":"45","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SignUpForm.jsx":"46","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\cms.actions.js":"47","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\alerts\\CmsAlert.jsx":"48","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\cms.constants.js":"49","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\fetch.constants.js":"50","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\user.constants.js":"51","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\general.constants.js":"52","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\hero.constants.js":"53","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\alert.constants.js":"54","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\firebase\\fireAuth.js":"55","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\user.actions.js":"56","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\hero.actions.js":"57","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\fetch.actions.js":"58","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\alert.actions.js":"59","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\hero\\container.js":"60","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\style.js":"61","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\alerts\\index.jsx":"62","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\container.js":"63","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\validation.js":"64","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\utils.js":"65","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\utils.js":"66","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\validation.js":"67","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SecondStep.jsx":"68","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\FirstStep.jsx":"69","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\loadings\\DefaultLoader.jsx":"70","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\hero\\index.js":"71","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\general\\index.js":"72","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\alerts\\index.js":"73","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\cms\\index.js":"74","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\auth\\index.js":"75","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\database\\index.js":"76","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\CustomCookies.jsx":"77"},{"size":557,"mtime":1617121057718,"results":"78","hashOfConfig":"79"},{"size":3632,"mtime":1617122445122,"results":"80","hashOfConfig":"79"},{"size":5151,"mtime":1617027267361,"results":"81","hashOfConfig":"79"},{"size":299,"mtime":1616513334443,"results":"82","hashOfConfig":"79"},{"size":577,"mtime":1616513334440,"results":"83","hashOfConfig":"79"},{"size":493,"mtime":1616513334439,"results":"84","hashOfConfig":"79"},{"size":416,"mtime":1616515185950,"results":"85","hashOfConfig":"79"},{"size":2214,"mtime":1617027267350,"results":"86","hashOfConfig":"79"},{"size":4395,"mtime":1616513334434,"results":"87","hashOfConfig":"79"},{"size":2967,"mtime":1616515185940,"results":"88","hashOfConfig":"79"},{"size":109,"mtime":1616513334423,"results":"89","hashOfConfig":"79"},{"size":235,"mtime":1616513334430,"results":"90","hashOfConfig":"79"},{"size":217,"mtime":1616513334429,"results":"91","hashOfConfig":"79"},{"size":415,"mtime":1617113247086,"results":"92","hashOfConfig":"79"},{"size":227,"mtime":1616515185943,"results":"93","hashOfConfig":"79"},{"size":10632,"mtime":1616515185942,"results":"94","hashOfConfig":"79"},{"size":181,"mtime":1616513334429,"results":"95","hashOfConfig":"79"},{"size":123,"mtime":1616513334437,"results":"96","hashOfConfig":"79"},{"size":713,"mtime":1616513334428,"results":"97","hashOfConfig":"79"},{"size":7636,"mtime":1617027267355,"results":"98","hashOfConfig":"79"},{"size":8477,"mtime":1617027267356,"results":"99","hashOfConfig":"79"},{"size":11161,"mtime":1617027267358,"results":"100","hashOfConfig":"79"},{"size":9801,"mtime":1617027267359,"results":"101","hashOfConfig":"79"},{"size":920,"mtime":1616515185935,"results":"102","hashOfConfig":"79"},{"size":222,"mtime":1616513334419,"results":"103","hashOfConfig":"79"},{"size":7747,"mtime":1617113260437,"results":"104","hashOfConfig":"79"},{"size":237,"mtime":1617027267361,"results":"105","hashOfConfig":"79"},{"size":368,"mtime":1616513334420,"results":"106","hashOfConfig":"79"},{"size":319,"mtime":1617027267364,"results":"107","hashOfConfig":"79"},{"size":638,"mtime":1617027267357,"results":"108","hashOfConfig":"79"},{"size":2302,"mtime":1616513334431,"results":"109","hashOfConfig":"79"},{"size":1398,"mtime":1617027267357,"results":"110","hashOfConfig":"79"},{"size":4911,"mtime":1617027267357,"results":"111","hashOfConfig":"79"},{"size":42,"mtime":1617027267359,"results":"112","hashOfConfig":"79"},{"size":2810,"mtime":1617027267358,"results":"113","hashOfConfig":"79"},{"size":1615,"mtime":1617027267355,"results":"114","hashOfConfig":"79"},{"size":3776,"mtime":1617117931397,"results":"115","hashOfConfig":"79"},{"size":4747,"mtime":1617027267352,"results":"116","hashOfConfig":"79"},{"size":260,"mtime":1616513334422,"results":"117","hashOfConfig":"79"},{"size":743,"mtime":1617113247086,"results":"118","hashOfConfig":"79"},{"size":2118,"mtime":1617028663212,"results":"119","hashOfConfig":"79"},{"size":1011,"mtime":1616515185945,"results":"120","hashOfConfig":"79"},{"size":1020,"mtime":1616515185944,"results":"121","hashOfConfig":"79"},{"size":513,"mtime":1616513334446,"results":"122","hashOfConfig":"79"},{"size":3084,"mtime":1617027255610,"results":"123","hashOfConfig":"79"},{"size":2795,"mtime":1617027267349,"results":"124","hashOfConfig":"79"},{"size":1374,"mtime":1616515185952,"results":"125","hashOfConfig":"79"},{"size":1121,"mtime":1617027267352,"results":"126","hashOfConfig":"79"},{"size":475,"mtime":1616515185959,"results":"127","hashOfConfig":"79"},{"size":581,"mtime":1617027267363,"results":"128","hashOfConfig":"79"},{"size":593,"mtime":1616515185963,"results":"129","hashOfConfig":"79"},{"size":661,"mtime":1617027267363,"results":"130","hashOfConfig":"79"},{"size":180,"mtime":1617027267364,"results":"131","hashOfConfig":"79"},{"size":216,"mtime":1616515185958,"results":"132","hashOfConfig":"79"},{"size":517,"mtime":1616513334420,"results":"133","hashOfConfig":"79"},{"size":1037,"mtime":1616515185954,"results":"134","hashOfConfig":"79"},{"size":537,"mtime":1617027267360,"results":"135","hashOfConfig":"79"},{"size":1486,"mtime":1617027267360,"results":"136","hashOfConfig":"79"},{"size":395,"mtime":1616515185951,"results":"137","hashOfConfig":"79"},{"size":924,"mtime":1617027267351,"results":"138","hashOfConfig":"79"},{"size":224,"mtime":1616515185941,"results":"139","hashOfConfig":"79"},{"size":615,"mtime":1616513334424,"results":"140","hashOfConfig":"79"},{"size":876,"mtime":1617027267354,"results":"141","hashOfConfig":"79"},{"size":641,"mtime":1617027267350,"results":"142","hashOfConfig":"79"},{"size":254,"mtime":1617027267349,"results":"143","hashOfConfig":"79"},{"size":93,"mtime":1616601882689,"results":"144","hashOfConfig":"79"},{"size":237,"mtime":1617027255611,"results":"145","hashOfConfig":"79"},{"size":2421,"mtime":1617027267348,"results":"146","hashOfConfig":"79"},{"size":1431,"mtime":1617027267348,"results":"147","hashOfConfig":"79"},{"size":236,"mtime":1616513334426,"results":"148","hashOfConfig":"79"},{"size":264,"mtime":1616515185957,"results":"149","hashOfConfig":"79"},{"size":792,"mtime":1616515185957,"results":"150","hashOfConfig":"79"},{"size":783,"mtime":1616610361342,"results":"151","hashOfConfig":"79"},{"size":2532,"mtime":1617027267362,"results":"152","hashOfConfig":"79"},{"size":1166,"mtime":1616513334444,"results":"153","hashOfConfig":"79"},{"size":2975,"mtime":1617027267362,"results":"154","hashOfConfig":"79"},{"size":1322,"mtime":1617122060293,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1klknxm",{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"167"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"167"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"167"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"167"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"167"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"167"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"167"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"167"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"167"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"167"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\App.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\config\\serviceWorker.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\Unlisten.js",["323"],"import React, { useEffect, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { alertActions } from \"../store/actions\";\r\n\r\nfunction Unlisten({ history, children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n      dispatch(alertActions.clear());\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history]);\r\n\r\n  return <Fragment>{children}</Fragment>;\r\n}\r\n\r\nexport default withRouter(Unlisten);\r\n",["324","325"],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\routers\\SaroRoute.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\footer\\Footer.js",["326","327","328"],"import React from \"react\";\r\nimport Facebook from \"../../../assets/images/components/footer/Facebook.svg\";\r\nimport Instagram from \"../../../assets/images/components/footer/Instagram.svg\";\r\nimport Youtube from \"../../../assets/images/components/footer/Youtube.svg\";\r\nimport Rectangle from \"../../../assets/images/components/footer/Rectangle.svg\";\r\nimport ArrowDown from \"../../../assets/images/components/footer/ArrowDown.svg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"footer-page\">\r\n        <div className=\"footer-page__language-button\">\r\n          \r\n            <select>\r\n              <option>English</option>\r\n              <option>Japanese</option>\r\n              <option>Korean</option>\r\n              <option>Chinese</option>\r\n              <option>Polish</option>\r\n            </select>\r\n          \r\n          <img\r\n            src={Rectangle}\r\n            className=\"language-button__rectangle\"\r\n            alt=\"rectangle\"\r\n          />\r\n          <div className=\"language-button__arrows\">\r\n            <img src={ArrowDown} alt=\"arrowDown\" className=\"arrows__ArrowDown\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-page__content\">\r\n          <h2>Contact us</h2>\r\n          <p>\r\n            You can contact us anytime through the Contact Form. You can use\r\n            Japanese, Korean, English or even Polsih or you can write to us by\r\n            your own contact@saro.website\r\n          </p>\r\n          <h2>Follow us</h2>\r\n        </div>\r\n        <div className=\"footer-page__icons\">\r\n          <ul className=\"footer-page__socialMedia\">\r\n            <li>\r\n              <a href=\"#\" className=\"footer-page__facebook\">\r\n                <img src={Facebook} alt=\"facebook\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" className=\"footer-page__instagram\">\r\n                <img src={Instagram} alt=\"instagram\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" className=\"footer-page__youtube\">\r\n                <img src={Youtube} alt=\"youtube\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\lessons\\Lessons.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Nav.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Sidebar.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\about\\About.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\404\\Error.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\Home.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\Blog.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\profile\\Settings.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\profile\\User.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\AdminTranslate.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\private\\dashboard\\Dashboard.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddArticle.jsx",["329"],"import React, {useEffect} from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Button, Form as F } from \"react-bootstrap\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { addValidationScheme } from \"./validation\";\r\n\r\nimport CmsAlert from \"./../../../components/shared/alerts/CmsAlert\";\r\nimport { useContainer } from \"./container\";\r\nimport BackArrow from \"./../../../assets/images/components/forms/ArrowBendUpLeft.svg\";\r\n\r\nimport * as C from \"./../../../utils/constants\";\r\nimport { FORMIK_HELPER } from \"./utils.js\";\r\n\r\n\r\nconst categories = [\r\n  {\r\n    id: 1,\r\n    name: \"Events\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Food\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Traditions\",\r\n  },\r\n];\r\n\r\nconst AddArticle = () => {\r\n  const {\r\n    alert,\r\n    goBack,\r\n    infoContainer,\r\n    handlerArticle,\r\n    fetchCrew,\r\n    crew,\r\n  } = useContainer();\r\n\r\n  useEffect(() => {\r\n    fetchCrew();\r\n  }, []);\r\n  return (\r\n    <Formik\r\n      {...{\r\n        initialValues: { title: \"\" },\r\n        validateOnChange: true,\r\n        validateOnMount: true,\r\n        validationSchema: addValidationScheme,\r\n        onSubmit: (values) => console.log(values),\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n      }) => (\r\n        <section className=\"section add-article\" style={{paddingTop: \"50px\"}}>\r\n          {alert && <CmsAlert />}\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item href=\"/panel\">\r\n              Admin Panel\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Add Article</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <button className=\"btn go-back\" onClick={() => goBack()}>\r\n            <img src={BackArrow} alt=\"Back\" /><p>Go Back</p>\r\n          </button>\r\n          <Form className=\"cms\" onSubmit={handlerArticle}>\r\n            <h2 className=\"main-title\">Add Article</h2>\r\n            <section className=\"form-container\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  id=\"title\"\r\n                  placeholder=\"add title\"\r\n                  type=\"text\"\r\n                  value={values[FORMIK_HELPER.TITLE]}\r\n                  onChange={handleChange}\r\n                />\r\n               {errors[FORMIK_HELPER.TITLE] || touched[FORMIK_HELPER.TITLE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.TITLE]}\r\n                  </F.Text>  : null\r\n                }\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"crew\">Crew</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"crew\",\r\n                    name: \"crew\",\r\n                    options: crew.map((item) => ({\r\n                      label: `${item.name} ${item.surname}`,\r\n                      value: `${item.name} ${item.surname}`,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.CREW, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.CREW] || touched[FORMIK_HELPER.CREW] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CREW]}\r\n                  </F.Text>  : null\r\n                }\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"category\">Category</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"category\",\r\n                    name: \"category\",\r\n                    options: categories.map((item) => ({\r\n                      label: item.name,\r\n                      value: item.name,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.CATEGORY, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.CATEGORY] || touched[FORMIK_HELPER.CATEGORY] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CATEGORY]}\r\n                  </F.Text>  : null\r\n                }\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"language\">Language</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"language\",\r\n                    name: \"language\",\r\n                    options: C.GENERAL_CONSTANTS.LANGUAGES.map((item) => ({\r\n                      label: item.label,\r\n                      value: item.lang,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.LANGUAGE, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.LANGUAGE] || touched[FORMIK_HELPER.LANGUAGE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.LANGUAGE]}\r\n                  </F.Text>  : null\r\n                }\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"editor\">\r\n              <Editor\r\n                apiKey={`${process.env.REACT_APP_TINY_API_KEY}`}\r\n                initialValue={infoContainer.content}\r\n                init={{\r\n                  plugins: [\r\n                    \"a11ychecker advcode advlist autolink link help imagetools image code lists charmap print preview hr anchor pagebreak\",\r\n                    \" lists link linkchecker media mediaembed noneditable powerpaste preview\",\r\n                    \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\r\n                    \"table emoticons template help\",\r\n                  ],\r\n                  a_plugin_option: true,\r\n                  a_configuration_option: 400,\r\n                  image_title: true,\r\n                  automatic_uploads: true,\r\n                  file_picker_types: \"image\",\r\n                  toolbar:\r\n                    \"insertfile undo redo a11ycheck | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons\",\r\n                  menu: {\r\n                    favs: {\r\n                      title: \"Shortcut\",\r\n                      items: \"code visualaid | searchreplace | emoticons\",\r\n                    },\r\n                  },\r\n                  menubar: \"favs file edit view insert format tools table help\",\r\n                  image_caption: true,\r\n                  powerpaste_allow_local_images: true,\r\n                }}\r\n                onChange={(e) =>\r\n                  setFieldValue([FORMIK_HELPER.EDITOR], e.target.getContent())\r\n                }\r\n              />\r\n              {errors[FORMIK_HELPER.EDITOR] || touched[FORMIK_HELPER.EDITOR] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.EDITOR]}\r\n                  </F.Text>  : null\r\n                }\r\n            </section>\r\n            <Button\r\n              className=\"submit-btn\"\r\n              type=\"submit\"\r\n              disabled={!isValid}\r\n              onClick={handleSubmit}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </section>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddEvents.jsx",["330","331"],"import React, {useEffect} from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Button, Form as F } from \"react-bootstrap\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { addEventsValidationScheme } from \"./validation\";\r\n\r\nimport CmsAlert from \"./../../../components/shared/alerts/CmsAlert\";\r\nimport { useContainer } from \"./container\";\r\nimport BackArrow from \"./../../../assets/images/components/forms/ArrowBendUpLeft.svg\";\r\n\r\nimport * as C from \"./../../../utils/constants\";\r\nimport { FORMIK_HELPER } from \"./utils.js\";\r\n\r\n\r\nconst cities = [\r\n  {\r\n    city: \"Warsaw\",\r\n  },\r\n  {\r\n    city: \"Cracow\",\r\n  },\r\n];\r\n\r\nconst AddEvents = () => {\r\n  const {\r\n    alert,\r\n    goBack,\r\n    crew,\r\n    fetchCrew,\r\n    isLoading,\r\n    handlerEvents,\r\n  } = useContainer();\r\n\r\n  useEffect(() => {\r\n    fetchCrew();\r\n  }, []);\r\n  return (\r\n    <Formik\r\n      {...{\r\n      initialValues: {title: \"\", place: \"\", imgURL: \"\", link: \"\"},\r\n      validateOnChange: true,\r\n      validateOnMount: true,\r\n      validationSchema: addEventsValidationScheme,\r\n      onSubmit: (values) => console.log(values),\r\n    }}\r\n    >\r\n      {({\r\n          values,\r\n          errors,\r\n          isValid,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          setFieldValue,\r\n      })=>(     \r\n      <section className=\"section add-news\" style={{paddingTop: \"50px\"}}>\r\n      {alert && <CmsAlert />}\r\n      <Breadcrumb>\r\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item href=\"/panel\">\r\n              Admin Panel\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Add Event</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n      <button className=\"btn go-back\" onClick={() => goBack()}>\r\n        <img src={BackArrow} alt=\"Back\" /><p>Go Back</p>\r\n      </button>\r\n      <Form className=\"cms\" onSubmit={handlerEvents}>\r\n        <h2 className=\"main-title\">Add event</h2>\r\n        <section className=\"form-container\">\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              value={values[FORMIK_HELPER.TITLE]}\r\n              placeholder=\"add title\"\r\n              onChange={handleChange}\r\n            />\r\n            {errors[FORMIK_HELPER.TITLE] || touched[FORMIK_HELPER.TITLE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.TITLE]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"city\">City</label>\r\n            <Select\r\n              {...{\r\n                id: \"city\",\r\n                name: \"city\",\r\n                options: cities.map((item) => ({\r\n                  label: item.city,\r\n                  value: item.city,\r\n                })),\r\n                onChange: (values) =>\r\n                setFieldValue(FORMIK_HELPER.CITY, values.value),\r\n              }}\r\n            />\r\n             {errors[FORMIK_HELPER.CITY] || touched[FORMIK_HELPER.CITY] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CITY]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"place\">Place</label>\r\n            <input\r\n              id=\"place\"\r\n              placeholder=\"add place\"\r\n              type=\"text\"\r\n              value={values[FORMIK_HELPER.PLACE]}\r\n              onChange={handleChange}\r\n            />\r\n            {errors[FORMIK_HELPER.PLACE] || touched[FORMIK_HELPER.PLACE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.PLACE]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              value={values[FORMIK_HELPER.DATE]}\r\n              onChange={handleChange}\r\n            />\r\n            {errors[FORMIK_HELPER.DATE] || touched[FORMIK_HELPER.DATE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.DATE]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"time\">Time</label>\r\n            <input\r\n              id=\"time\"\r\n              type=\"time\"\r\n              value={values[FORMIK_HELPER.TIME]}\r\n              onChange={handleChange}\r\n            />\r\n            {errors[FORMIK_HELPER.TIME] || touched[FORMIK_HELPER.TIME] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.TIME]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"imgURL\">Img URL</label>\r\n            <input\r\n              id=\"imgURL\"\r\n              placeholder=\"add img URL\"\r\n              type=\"text\"\r\n              value={values[FORMIK_HELPER.IMG_URL]}\r\n              onChange={handleChange}\r\n            />\r\n            {errors[FORMIK_HELPER.IMG_URL] || touched[FORMIK_HELPER.IMG_URL] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.IMG_URL]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"link\">Link</label>\r\n            <input\r\n              id=\"link\"\r\n              placeholder=\"add link\"\r\n              type=\"text\"\r\n              value={values[FORMIK_HELPER.LINK]}\r\n              onChange={handleChange}\r\n            />\r\n             {errors[FORMIK_HELPER.LINK] || touched[FORMIK_HELPER.LINK] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.LINK]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"language\">Lang</label>\r\n            <Select\r\n              {...{\r\n                id: \"language\",\r\n                name: \"language\",\r\n                options: C.GENERAL_CONSTANTS.LANGUAGES.map((item) => ({\r\n                  label: item.label,\r\n                  value: item.lang,\r\n                })),\r\n                onChange: (values) => setFieldValue(FORMIK_HELPER.LANGUAGE, values.value),\r\n              }}\r\n            />\r\n             {errors[FORMIK_HELPER.LANGUAGE] || touched[FORMIK_HELPER.LANGUAGE] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.LANGUAGE]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"crew\">Crew</label>\r\n            <Select\r\n              {...{\r\n                id: \"crew\",\r\n                name: \"crew\",\r\n                options: crew.map((item) => ({\r\n                  label: `${item.name} ${item.surname}`,\r\n                  value: `${item.name} ${item.surname}`,\r\n                })),\r\n                onChange: (values) => setFieldValue(FORMIK_HELPER.CREW, values.value),\r\n              }}\r\n            />\r\n            {errors[FORMIK_HELPER.CREW] || touched[FORMIK_HELPER.CREW] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CREW]}\r\n                  </F.Text>  : null\r\n                }\r\n          </div>\r\n        </section>\r\n        <div className=\"form-control form-info\">\r\n          <label htmlFor=\"content\">Info</label>\r\n          <textarea\r\n            id=\"content\"\r\n            placeholder=\"add event details\"\r\n            value={values[FORMIK_HELPER.EDITOR]}\r\n            onChange={handleChange}\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n          ></textarea>   \r\n         {errors[FORMIK_HELPER.EDITOR] || touched[FORMIK_HELPER.EDITOR] ? \r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.EDITOR]}\r\n                  </F.Text>  : null\r\n                }   \r\n        </div>   \r\n\r\n        <Button className=\"submit-btn\" type=\"submit\" disabled={!isValid} onClick={handleSubmit}>\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    </section>\r\n    )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddEvents;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\Edit.jsx",["332"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nimport CmsAlert from \"./../../../components/shared/alerts/CmsAlert\";\r\nimport { useEdit } from \"./container\";\r\n\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport * as CONSTANTS from \"./../../../utils/constants\";\r\nimport BackArrow from \"./../../../assets/images/components/forms/ArrowBendUpLeft.svg\";\r\n\r\nconst cities = [\r\n  {\r\n    city: \"Warsaw\",\r\n  },\r\n  {\r\n    city: \"Cracow\",\r\n  },\r\n];\r\nconst lang = [\r\n  {\r\n    lang: \"en\",\r\n  },\r\n  {\r\n    lang: \"ja\",\r\n  },\r\n];\r\nconst categories = [\r\n  {\r\n    id: 1,\r\n    name: \"Events\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Food\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Traditions\",\r\n  },\r\n];\r\n\r\nconst people = [\r\n  {\r\n    id: 1,\r\n    name: \"Robert\",\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"xxx\",\r\n  },\r\n];\r\n\r\nconst Edit = () => {\r\n  const {\r\n    alert,\r\n    goBack,\r\n    handleEdtiorChange,\r\n    handlerSubmit,\r\n    getEvent,\r\n    editableContainer,\r\n    setEditableContainer,\r\n  } = useEdit();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const type = query.get(\"type\");\r\n  const id = query.get(\"id\");\r\n\r\n  useEffect(() => {\r\n    getEvent(id, type);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"section edit\" style={{paddingTop: \"50px\"}}>\r\n      {alert && <CmsAlert />}\r\n      <Breadcrumb>\r\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item href=\"/panel\">\r\n              Admin Panel\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Edit</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n      <button className=\"btn go-back\" onClick={() => goBack()}>\r\n        <img src={BackArrow} alt=\"Back\" />\r\n        <p>Go Back</p>\r\n      </button>\r\n      <form className=\"cms\">\r\n        <h2 className=\"main-title\">Edit element</h2>\r\n        <section className=\"form-container\">\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              id=\"title\"\r\n              placeholder={\r\n                editableContainer ? editableContainer.title : \"add title...\"\r\n              }\r\n              type=\"text\"\r\n              value={editableContainer.title}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, title: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"city\">City</label>\r\n            <Select\r\n              {...{\r\n                id: \"city\",\r\n                name: \"city\",\r\n                placeholder: editableContainer.city,\r\n                value: editableContainer.city,\r\n                options: cities.map((item) => ({\r\n                  label: item.city,\r\n                  value: item.city,\r\n                })),\r\n                onChange: (options) => {\r\n                  setEditableContainer((prevState) => {\r\n                    return { ...prevState, city: options.value };\r\n                  });\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"place\">Place</label>\r\n            <input\r\n              id=\"place\"\r\n              placeholder={\r\n                editableContainer ? editableContainer.place : \"add place...\"\r\n              }\r\n              type=\"text\"\r\n              value={editableContainer.place}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, place: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              placeholder={editableContainer ? editableContainer.date : null}\r\n              value={editableContainer.date}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, date: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"time\">Time</label>\r\n            <input\r\n              id=\"time\"\r\n              type=\"time\"\r\n              placeholder={editableContainer ? editableContainer.time : null}\r\n              value={editableContainer.time}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, time: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"imgURL\">Img URL</label>\r\n            <input\r\n              id=\"imgURL\"\r\n              placeholder={\r\n                editableContainer ? editableContainer.imgURL : \"add img URL...\"\r\n              }\r\n              type=\"text\"\r\n              value={editableContainer.imgURL}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, imgURL: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"link\">Link</label>\r\n            <input\r\n              id=\"link\"\r\n              placeholder={\r\n                editableContainer ? editableContainer.link : \"add link...\"\r\n              }\r\n              type=\"text\"\r\n              value={editableContainer.link}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, link: value };\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          {type === CONSTANTS.GENERAL_CONSTANTS.EVENTS ? null : (\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <Select\r\n                {...{\r\n                  id: \"category\",\r\n                  name: \"category\",\r\n                  placeholder: editableContainer.category,\r\n                  value: editableContainer.category,\r\n                  options: categories.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.name,\r\n                  })),\r\n                  onChange: (options) => {\r\n                    setEditableContainer((prevState) => {\r\n                      return { ...prevState, category: options.value };\r\n                    });\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"lang\">Lang</label>\r\n            <Select\r\n              {...{\r\n                id: \"lang\",\r\n                name: \"lang\",\r\n                placeholder: editableContainer.language,\r\n                value: editableContainer.language,\r\n                options: lang.map((item) => ({\r\n                  label: item.lang,\r\n                  value: item.lang,\r\n                })),\r\n                onChange: (options) => {\r\n                  setEditableContainer((prevState) => {\r\n                    return { ...prevState, language: options.value };\r\n                  });\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"crew\">Crew</label>\r\n            <Select\r\n              {...{\r\n                id: \"crew\",\r\n                name: \"crew\",\r\n                placeholder: editableContainer.crew,\r\n                value: editableContainer.crew,\r\n                options: people.map((item) => ({\r\n                  label: item.name,\r\n                  value: item.name,\r\n                })),\r\n\r\n                onChange: (options) => {\r\n                  setEditableContainer((prevState) => {\r\n                    return { ...prevState, crew: options.value };\r\n                  });\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </section>\r\n\r\n        {type === CONSTANTS.GENERAL_CONSTANTS.EVENTS ? (\r\n          <div className=\"form-control form-info\">\r\n            <label htmlFor=\"content\">Info</label>\r\n            <textarea\r\n              id=\"content\"\r\n              placeholder={\r\n                editableContainer\r\n                  ? editableContainer.content\r\n                  : \"add description...\"\r\n              }\r\n              value={editableContainer.content}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setEditableContainer((prevState) => {\r\n                  return { ...prevState, content: value };\r\n                });\r\n              }}\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </div>\r\n        ) : (\r\n          <section className=\"editor\">\r\n            <Editor\r\n              apiKey={`${process.env.REACT_APP_TINY_API_KEY}`}\r\n              initialValue={editableContainer.content}\r\n              init={{\r\n                plugins: [\r\n                  \"a11ychecker advcode advlist autolink link help imagetools image code lists charmap print preview hr anchor pagebreak\",\r\n                  \" lists link linkchecker media mediaembed noneditable powerpaste preview\",\r\n                  \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\r\n                  \"table emoticons template help\",\r\n                ],\r\n                a_plugin_option: true,\r\n                a_configuration_option: 400,\r\n                image_title: true,\r\n                automatic_uploads: true,\r\n                file_picker_types: \"image\",\r\n                toolbar:\r\n                  \"insertfile undo redo a11ycheck | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons\",\r\n                menu: {\r\n                  favs: {\r\n                    title: \"Shortcut\",\r\n                    items: \"code visualaid | searchreplace | emoticons\",\r\n                  },\r\n                },\r\n                menubar: \"favs file edit view insert format tools table help\",\r\n                image_caption: true,\r\n                powerpaste_allow_local_images: true,\r\n              }}\r\n              onChange={handleEdtiorChange}\r\n            />\r\n          </section>\r\n        )}\r\n        <Button\r\n          className=\"submit-btn\"\r\n          type=\"button\"\r\n          onClick={() => handlerSubmit(type, id)}\r\n        >\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\panel\\AdminPanel.jsx",["333"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Tabs, Tab, Nav, Table, Button, Pagination } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\n\r\nimport { useContainer } from \"../../public/home/container\";\r\nimport { useEdit } from \"../../special/edit/container\";\r\nimport { firestore, auth } from \"../../../components/feature/firebase\";\r\nimport CmsAlert from \"../../../components/shared/alerts/CmsAlert\";\r\n\r\nimport * as C from \"../../../utils/constants\";\r\nimport { pageSize } from \"./utils\";\r\n\r\nconst AdminPanel = () => {\r\n  const { getNews, getEvents, getPosts } = useContainer();\r\n  const { handleEdit } = useEdit();\r\n\r\n  const newsItems = useSelector((state) => state.database.news);\r\n  const newsEvents = useSelector((state) => state.database.events);\r\n  const newsPosts = useSelector((state) => state.database.posts);\r\n  const alert = useSelector((state) => state.CMS.alert);\r\n\r\n  const pagination = [];\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [key, setKey] = useState(C.GENERAL_CONSTANTS.NEWS_CONTENT);\r\n\r\n  const totalCountValue = (key) => {\r\n    if (key === C.GENERAL_CONSTANTS.NEWS_CONTENT) {\r\n      return newsItems.length;\r\n    }\r\n    if (key === C.GENERAL_CONSTANTS.EVENTS_CONTENT) {\r\n      return newsEvents.length;\r\n    }\r\n    if (key === C.GENERAL_CONSTANTS.BLOG_CONTENT) {\r\n      return newsPosts.length;\r\n    }\r\n  };\r\n  const totalCount = totalCountValue(key);\r\n\r\n  const indexOfLastVisible = currentPage * itemsPerPage;\r\n  const indexOfFirstVisible = indexOfLastVisible - itemsPerPage;\r\n\r\n  const slicedNews = newsItems.slice(indexOfFirstVisible, indexOfLastVisible);\r\n  const slicedEvents = newsEvents.slice(\r\n    indexOfFirstVisible,\r\n    indexOfLastVisible\r\n  );\r\n  const slicedPosts = newsPosts.slice(indexOfFirstVisible, indexOfLastVisible);\r\n\r\n  const paginate = (number) => {\r\n    setCurrentPage(number);\r\n  };\r\n  for (\r\n    let number = 1;\r\n    number <= Math.ceil(totalCount / itemsPerPage);\r\n    number++\r\n  ) {\r\n    pagination.push(number);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (totalCount <= itemsPerPage) {\r\n      paginate(1);\r\n    }\r\n  }, [totalCount, itemsPerPage]);\r\n\r\n  const removeItem = async (type, id) => {\r\n    return await firestore\r\n      .collection(C.GENERAL_CONSTANTS.LANG)\r\n      .doc(C.GENERAL_CONSTANTS.CHANGE_LANGUAGE_TO.ENGLISH)\r\n      .collection(type)\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n    getEvents();\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"section saro-panel\">\r\n      {alert && <CmsAlert />}\r\n      <h1>Saro CMS 1.0.0</h1>\r\n      <h2>\r\n        Welcome{\" \"}\r\n        <span style={{ color: \"red\" }}>\r\n          {auth?.currentUser?.displayName ?? \"Saro-crew\"}\r\n        </span>\r\n      </h2>\r\n      <Tabs defaultActiveKey=\"newContent\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"newContent\" title=\"Add new content\">\r\n          <Nav className=\"flex-column\">\r\n            <Nav.Link href=\"/panel/add/news-content\">Add news</Nav.Link>\r\n            <Nav.Link href=\"/panel/add/events\">Add new event</Nav.Link>\r\n            <Nav.Link href=\"/panel/add/article\">Add new article</Nav.Link>\r\n          </Nav>\r\n        </Tab>\r\n        <Tab eventKey=\"menagment\" title=\"Menage content\">\r\n          <Tabs\r\n            defaultActiveKey=\"newsContent\"\r\n            activeKey={key}\r\n            onSelect={(key) => {\r\n              setKey(key);\r\n              paginate(1);\r\n            }}\r\n          >\r\n            <Tab eventKey=\"newsContent\" title=\"News management\">\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Title</th>\r\n                    <th>Published date</th>\r\n                    <th>Author</th>\r\n                    <th>Menagement</th>\r\n                  </tr>\r\n                </thead>\r\n                {slicedNews.map((post, index) => {\r\n                  const { crew, title, publishedDate, id, type } = post;\r\n                  return (\r\n                    <tbody key={id}>\r\n                      <tr>\r\n                        <td>{index}</td>\r\n                        <td>{title}</td>\r\n                        <td>{publishedDate}</td>\r\n                        <td>{crew}</td>\r\n                        <td>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"primary\",\r\n                              onClick: () => handleEdit(id, type),\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"danger\",\r\n                              onClick: () => removeItem(type, id),\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </Table>\r\n            </Tab>\r\n            <Tab eventKey=\"eventsContent\" title=\"Events menadżerrrooo\">\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Title</th>\r\n                    <th>Published date</th>\r\n                    <th>Author</th>\r\n                    <th>Menagement</th>\r\n                  </tr>\r\n                </thead>\r\n                {slicedEvents.map((post, index) => {\r\n                  const { crew, title, publishedDate, id, type } = post;\r\n                  return (\r\n                    <tbody key={id}>\r\n                      <tr>\r\n                        <td>{index}</td>\r\n                        <td>{title}</td>\r\n                        <td>{publishedDate}</td>\r\n                        <td>{crew}</td>\r\n                        <td>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"primary\",\r\n                              onClick: () => handleEdit(id, type),\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"danger\",\r\n                              onClick: () => removeItem(type, id),\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </Table>\r\n            </Tab>\r\n            <Tab eventKey=\"blogContent\" title=\"Blog managment\">\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Title</th>\r\n                    <th>Published date</th>\r\n                    <th>Author</th>\r\n                    <th>Menagement</th>\r\n                  </tr>\r\n                </thead>\r\n                {slicedPosts.map((post, index) => {\r\n                  const { crew, title, publishedDate, id, type } = post;\r\n                  return (\r\n                    <tbody key={id}>\r\n                      <tr>\r\n                        <td>{index}</td>\r\n                        <td>{title}</td>\r\n                        <td>{publishedDate}</td>\r\n                        <td>{crew}</td>\r\n                        <td>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"primary\",\r\n                              onClick: () => handleEdit(id, type),\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            {...{\r\n                              variant: \"danger\",\r\n                              onClick: () => removeItem(type, id),\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </Table>\r\n            </Tab>\r\n          </Tabs>\r\n          <div className=\"pagination\">\r\n            <Pagination>\r\n              {pagination.map((number) => {\r\n                return (\r\n                  <Pagination.Item\r\n                    key={number}\r\n                    onClick={() => paginate(number)}\r\n                    active={number === currentPage}\r\n                  >\r\n                    {number}\r\n                  </Pagination.Item>\r\n                );\r\n              })}\r\n            </Pagination>\r\n            <Select\r\n              {...{\r\n                id: \"pageSize\",\r\n                name: \"pageSize\",\r\n                placeholder: itemsPerPage,\r\n                value: itemsPerPage,\r\n                options: pageSize.map((size) => ({\r\n                  label: size,\r\n                  value: size,\r\n                })),\r\n                onChange: (options) => {\r\n                  setItemsPerPage(options.value);\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"menagmentOfCrew\" title=\"Menage your profile\" disabled>\r\n          2\r\n        </Tab>\r\n        <Tab eventKey=\"menagmentOfPictrues\" title=\"Menage pictrues\" disabled>\r\n          3\r\n        </Tab>\r\n      </Tabs>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\Login.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SignUp.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\AddNews.jsx",["334"],"import React, { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Button, Form as F } from \"react-bootstrap\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { addValidationScheme } from \"./validation\";\r\n\r\nimport CmsAlert from \"./../../../components/shared/alerts/CmsAlert\";\r\nimport { useContainer } from \"./container\";\r\nimport BackArrow from \"./../../../assets/images/components/forms/ArrowBendUpLeft.svg\";\r\n\r\nimport * as C from \"./../../../utils/constants\";\r\nimport { FORMIK_HELPER } from \"./utils.js\";\r\n\r\nconst categories = [\r\n  {\r\n    id: 1,\r\n    name: \"Events\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Food\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Traditions\",\r\n  },\r\n];\r\n\r\nconst AddNews = () => {\r\n  const {\r\n    alert,\r\n    fetchCrew,\r\n    crew,\r\n    infoContainer,\r\n    handlerNews,\r\n    goBack,\r\n  } = useContainer();\r\n\r\n  useEffect(() => {\r\n    fetchCrew();\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      {...{\r\n        initialValues: { title: \"\" },\r\n        validateOnChange: true,\r\n        validateOnMount: true,\r\n        validationSchema: addValidationScheme,\r\n        onSubmit: (values) => {\r\n          console.log(values)\r\n          \r\n        \r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n      }) => (\r\n        <section className=\"section add-news\" style={{paddingTop: \"50px\"}}>\r\n          {alert && <CmsAlert />}\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item href=\"/panel\">\r\n              Admin Panel\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Add News</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <button className=\"btn go-back\" onClick={() => goBack()}>\r\n            <img src={BackArrow} alt=\"Back\" />\r\n            <p>Go Back</p>\r\n          </button>\r\n          <Form className=\"cms\" onSubmit={handlerNews}>\r\n            <h2 className=\"main-title\">Add News</h2>\r\n            <section className=\"form-container\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  id=\"title\"\r\n                  placeholder=\"add title\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  value={values[FORMIK_HELPER.TITLE]}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors[FORMIK_HELPER.TITLE] || touched[FORMIK_HELPER.TITLE] ? (\r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.TITLE]}\r\n                  </F.Text>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"crew\">Crew</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"crew\",\r\n                    name: \"crew\",\r\n                    options: crew.map((item) => ({\r\n                      label: `${item.name} ${item.surname}`,\r\n                      value: `${item.name} ${item.surname}`,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.CREW, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.CREW] || touched[FORMIK_HELPER.CREW] ? (\r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CREW]}\r\n                  </F.Text>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"category\">Category</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"category\",\r\n                    name: \"category\",\r\n                    options: categories.map((item) => ({\r\n                      label: item.name,\r\n                      value: item.name,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.CATEGORY, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.CATEGORY] ||\r\n                touched[FORMIK_HELPER.CATEGORY] ? (\r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.CATEGORY]}\r\n                  </F.Text>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"language\">Language</label>\r\n                <Select\r\n                  {...{\r\n                    id: \"language\",\r\n                    name: \"language\",\r\n                    options: C.GENERAL_CONSTANTS.LANGUAGES.map((item) => ({\r\n                      label: item.label,\r\n                      value: item.lang,\r\n                    })),\r\n                    onChange: (values) =>\r\n                      setFieldValue(FORMIK_HELPER.LANGUAGE, values.value),\r\n                  }}\r\n                />\r\n                {errors[FORMIK_HELPER.LANGUAGE] ||\r\n                touched[FORMIK_HELPER.LANGUAGE] ? (\r\n                  <F.Text className=\"validation-alert\">\r\n                    {errors[FORMIK_HELPER.LANGUAGE]}\r\n                  </F.Text>\r\n                ) : null}\r\n              </div>\r\n            </section>\r\n            <section className=\"editor\">\r\n              <Editor\r\n                apiKey={`${process.env.REACT_APP_TINY_API_KEY}`}\r\n                initialValue={infoContainer.content}\r\n                init={{\r\n                  plugins: [\r\n                    \"a11ychecker advcode advlist autolink link help imagetools image code lists charmap print preview hr anchor pagebreak\",\r\n                    \" lists link linkchecker media mediaembed noneditable powerpaste preview\",\r\n                    \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\r\n                    \"table emoticons template help\",\r\n                  ],\r\n                  a_plugin_option: true,\r\n                  a_configuration_option: 400,\r\n                  image_title: true,\r\n                  automatic_uploads: true,\r\n                  file_picker_types: \"image\",\r\n                  toolbar:\r\n                    \"insertfile undo redo a11ycheck | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons\",\r\n                  menu: {\r\n                    favs: {\r\n                      title: \"Shortcut\",\r\n                      items: \"code visualaid | searchreplace | emoticons\",\r\n                    },\r\n                  },\r\n                  menubar: \"favs file edit view insert format tools table help\",\r\n                  image_caption: true,\r\n                  powerpaste_allow_local_images: true,\r\n                }}\r\n                onChange={(e) =>\r\n                  setFieldValue([FORMIK_HELPER.EDITOR], e.target.getContent())\r\n                }\r\n              />\r\n              {errors[FORMIK_HELPER.EDITOR] || touched[FORMIK_HELPER.EDITOR] ? (\r\n                <F.Text className=\"validation-alert\">\r\n                  {errors[FORMIK_HELPER.EDITOR]}\r\n                </F.Text>\r\n              ) : null}\r\n            </section>\r\n            <Button\r\n              className=\"submit-btn\"\r\n              type=\"submit\"\r\n              disabled={!isValid}\r\n              onClick={handleSubmit}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </section>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNews;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\firebase\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\utils.js",["335"],"const BUTTONS_HELPER = [\r\n  {\r\n    action: \"someConsts\",\r\n    color: \"someConsts\",\r\n    content: \"someConsts\",\r\n    type: \"someConsts\",\r\n    isActive: (selectedRowId) => !!selectedRowId,\r\n  },\r\n  {\r\n    action: \"someConsts\",\r\n    color: \"someConsts\",\r\n    content: \"someConsts\",\r\n    type: \"someConsts\",\r\n    isActive: (selectedRowId) => !!selectedRowId,\r\n  },\r\n];\r\n\r\nexport const FORMIK_HELPER = Object.freeze({\r\n  TITLE: \"title\",\r\n  CREW: \"crew\",\r\n  CATEGORY: \"category\",\r\n  LANGUAGE: \"language\",\r\n  EDITOR: \"content\",\r\n  CITY: \"city\",\r\n  PLACE: \"place\",\r\n  DATE: \"date\",\r\n  TIME: \"time\",\r\n  IMG_URL: \"imgURL\",\r\n  LINK: \"link\",\r\n\r\n});\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\contact\\index.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\validation.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\add\\container.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\panel\\utils.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\special\\edit\\container.js",["336","337"],"import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { cmsActions } from \"../../../store/actions\";\r\nimport { GENERAL_CONSTANTS } from \"../../../utils/constants\";\r\nimport { firestore } from \"../../../components/feature/firebase\";\r\n\r\nexport const useEdit = () => {\r\n  const alert = useSelector((state) => state.CMS.alert);\r\n  const [type, setType] = useState(\"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [editableContainer, setEditableContainer] = useState({});\r\n\r\n  const lang = useSelector((state) => state.general.language);\r\n  const editable = useSelector((state) => state.CMS.edit);\r\n\r\n  const getEvent = (id, type) => {\r\n    try {\r\n      firestore\r\n        .collection(GENERAL_CONSTANTS.LANG)\r\n        .doc(lang)\r\n        .collection(type)\r\n        .doc(id)\r\n        .onSnapshot((doc) => setEditableContainer(doc.data()));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const updateEvent = async (id, type) => {\r\n    return await firestore\r\n      .collection(GENERAL_CONSTANTS.LANG)\r\n      .doc(lang)\r\n      .collection(type)\r\n      .doc(id)\r\n      .update({\r\n        id,\r\n        type: GENERAL_CONSTANTS.EVENTS,\r\n        title: editableContainer.title,\r\n        imgURL: editableContainer.imgURL || \"https://via.placeholder.com/50\",\r\n        content: editableContainer.content,\r\n        date: editableContainer.date,\r\n        time: editableContainer.time,\r\n        crew: editableContainer.crew,\r\n        city: editableContainer.city,\r\n        place: editableContainer.place,\r\n        link: editableContainer.link,\r\n        language: editableContainer.language,\r\n        published: new Date(),\r\n        publishedDate: new Date().toLocaleString(),\r\n      });\r\n  };\r\n\r\n  const handleEdit = async (id, type) => {\r\n    history.push(`/panel/edit?type=${type}&id=${id}`);\r\n  };\r\n\r\n  const handleEdtiorChange = (e) => {\r\n    const value = e.target.getContent();\r\n    setEditableContainer((prevState) => {\r\n      return { ...prevState, content: value };\r\n    });\r\n  };\r\n\r\n  const handlerSubmit = async (type, id) => {\r\n    dispatch(cmsActions.clear());\r\n    switch (type) {\r\n      case GENERAL_CONSTANTS.EVENTS:\r\n        try {\r\n          dispatch(cmsActions.addEventsReq());\r\n          updateEvent(id, type);\r\n          dispatch(cmsActions.addEventsSuccess());\r\n          history.push(`/panel`);\r\n        } catch (error) {\r\n          dispatch(cmsActions.addEventsFailure());\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  return {\r\n    alert,\r\n    goBack,\r\n    handleEdtiorChange,\r\n    handlerSubmit,\r\n    getEvent,\r\n    handleEdit,\r\n    editableContainer,\r\n    setEditableContainer,\r\n    editable,\r\n  };\r\n};\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\container.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\hero\\Main.js",["338","339","340"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useContainer } from \"./container\";\r\nimport { useContainer as useHomeContainer } from \"../../../pages/public/home/container\";\r\n\r\nimport { hero } from \"../../../store/actions/hero.actions\";\r\n\r\nconst Main = () => {\r\n  const { getHero } = useContainer();\r\n  const { getEvents } = useHomeContainer();\r\n  const [isReversed, setIsReversed] = useState(false);\r\n\r\n  const index = useSelector((state) => state.hero);\r\n  const heroData = useSelector((state) => state.database.hero);\r\n  const eventsData = useSelector((state) => state.database.events);\r\n  const dispatch = useDispatch();\r\n\r\n  const data = [...heroData, ...eventsData.slice(0, 2)];\r\n\r\n  data.map((item, index) => {\r\n    return (item[\"order\"] = index);\r\n  });\r\n\r\n  const dataOrdered = isReversed ? data.reverse() : data;\r\n\r\n  const checkNumber = (number) => {\r\n    if (number > data.length - 1) {\r\n      dispatch(hero(0));\r\n    } else {\r\n      return dispatch(hero(number));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let slider = setInterval(() => {\r\n      checkNumber(index + 1);\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(slider);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    getHero();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getBanner = (id) => {\r\n    return dispatch(hero(id));\r\n  };\r\n\r\n  return (\r\n    <section className=\"hero\" style={{ padding: \"0\" }}>\r\n      <div className=\"hero__container\">\r\n        <div className=\"img__container\">\r\n          {dataOrdered.map((item, currentId) => {\r\n            const {\r\n              id,\r\n              imgURL,\r\n              type,\r\n              title,\r\n              subtitle,\r\n              date,\r\n              time,\r\n              place,\r\n              city,\r\n              content,\r\n              link,\r\n              buttonTitle,\r\n              buttonAction,\r\n            } = item;\r\n            return (\r\n              <div key={id}>\r\n                <img\r\n                  src={imgURL}\r\n                  alt={title}\r\n                  key={currentId}\r\n                  className={`${index === currentId ? \"active\" : \"remove\"}`}\r\n                ></img>\r\n                <div\r\n                  className={`img__text ${\r\n                    index === currentId ? \"active\" : \"remove\"\r\n                  }`}\r\n                >\r\n                  <h2 style={{ color: \"#deb887\" }}>{item.title}</h2>\r\n                  <h3>{subtitle}</h3>\r\n                  {type === \"events\" && (\r\n                    <>\r\n                      <p>\r\n                        Date: ${date} Time: ${time}\r\n                      </p>\r\n                      <p>\r\n                        Place: {place}, {city}\r\n                      </p>\r\n                      <p>{content}</p>\r\n                      <button className=\"btn hero-btn\">\r\n                        <a href={link}>Learn more</a>\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  {buttonTitle && (\r\n                    <button className=\"btn hero-btn\">{buttonTitle}</button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"hero__content\">\r\n          <div className=\"hero__item\">\r\n            <div className=\"slidershow\">\r\n              {dataOrdered.map((item, id) => {\r\n                return (\r\n                  <button\r\n                    key={item.id}\r\n                    className={`dot ${index === id && \"active\"}`}\r\n                    onClick={() => getBanner(id)}\r\n                  ></button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\NavMenu.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\Logo.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\PolishLearning.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\Introduction.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\home\\PartnerNearYou.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\SingleArticle.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\LoginForm.jsx",["341"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { loginValidationScheme } from \"./validation\";\r\nimport { auth } from \"./../../firebase\";\r\nimport { FORM_HELPER } from \"./utils\";\r\nimport { userActions, alertActions } from \"../../../../store/actions\";\r\nimport Alert from \"./../../../shared/alerts\";\r\nimport { DefaultLoader } from \"./../../../shared/loadings/DefaultLoader\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector((state) => state.alert.alert);\r\n  const isLoading = useSelector((state) => state.currentUser.isLoading);\r\n\r\n  const signin = async (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    dispatch(alertActions.clear());\r\n    try {\r\n      await signin(values.email, values.password);\r\n      dispatch(userActions.request());\r\n      history.push(\"/dashboard\");\r\n    } catch (error) {\r\n      dispatch(alertActions.error(error.message));\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <DefaultLoader />;\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      {...{\r\n        initialValues: {},\r\n        validateOnChange: true,\r\n        validationSchema: loginValidationScheme,\r\n        onSubmit: (values) => handleSubmit(values),\r\n      }}\r\n    >\r\n      {({ values, errors, isValid, touched, handleChange, handleSubmit }) => (\r\n        <>\r\n          {alert && <Alert />}\r\n          <h2>Log in</h2>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\" className=\"label\">\r\n              {errors.email && touched.email ? (\r\n                <div className=\"error__message\">{errors.email}</div>\r\n              ) : null}\r\n            </label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={values[FORM_HELPER.EMAIL]}\r\n              onChange={handleChange}\r\n              required\r\n              placeholder=\"jane@example.com\"\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"password\" className=\"label\">\r\n              {errors.password && touched.password ? (\r\n                <div>{errors.password}</div>\r\n              ) : null}\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={values[FORM_HELPER.PASSWORD]}\r\n              onChange={handleChange}\r\n              required\r\n              placeholder=\"••••••••••••\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={!isValid} onClick={handleSubmit}>\r\n            LOG IN\r\n          </button>\r\n          <div className=\"auth-control\">\r\n            <Link className=\"create-account-link\" to=\"/sign-up\">\r\n              Create an account\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SignUpForm.jsx",["342"],"import React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { FORM_HELPER } from \"./utils\";\r\nimport { signUpValidationScheme } from \"./validation\";\r\nimport { auth } from \"./../../firebase\";\r\nimport { userActions } from \"../../../../store/actions\";\r\nimport { ReactComponent as ArrowBack } from \"../../../../assets/images/components/forms/arrowBack.svg\";\r\nimport { FirstStep } from \"./FirstStep\";\r\nimport { SecondStep } from \"./SecondStep\";\r\n\r\nconst SignUpForm = () => {\r\n  const [step, setStep] = useState(1);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerSubmit = async (userData) => {\r\n    if (step === 2) {\r\n      try {\r\n        dispatch(userActions.signUpRequest());\r\n        await auth\r\n          .createUserWithEmailAndPassword(userData.email, userData.password)\r\n          .then((resp) => dispatch(userActions.signUp(resp.user.providerData)));\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      setStep(step + 1);\r\n      // actions.setTouched({});\r\n      // actions.setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      {...{\r\n        initialValues: { gender: \"male\", nativeLang: \"english\", studyingLang: \"polish\", hobbies: \"\", about:\"\" },\r\n        validateOnChange: true,\r\n        validationSchema: signUpValidationScheme,\r\n        onSubmit: (values) => handlerSubmit(values),\r\n      }}\r\n    >\r\n      {({ values, errors, isValid, handleChange, handleSubmit }) => (\r\n        <Form>\r\n          {step !== 1 ? (\r\n            <button\r\n              className=\"arrow-back-icon\"\r\n              type=\"button\"\r\n              onClick={() => setStep(step - 1)}\r\n            >\r\n              <ArrowBack />\r\n            </button>\r\n          ) : null}\r\n          <h2>Sign Up</h2>\r\n          {step === 1 ? (\r\n            <FirstStep\r\n              handleChange={handleChange}\r\n              values={values}\r\n              errors={errors}\r\n            />\r\n          ) : null}\r\n          {step === 2 ? (\r\n            <SecondStep\r\n              handleChange={handleChange}\r\n              values={values}\r\n              errors={errors}\r\n            />\r\n          ) : null}\r\n          <button\r\n            type=\"submit\"\r\n            tabindex=\"4\"\r\n            onClick={handleSubmit}\r\n            disabled={!isValid}\r\n          >\r\n            {step === 2 ? \"Sign Up\" : \"Next\"}\r\n          </button>\r\n          <div className=\"auth-control\">\r\n            <p style={{ display: \"inline\" }}>Do you have an account?</p>\r\n            <Link to=\"/sign-in\">Log-in</Link>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\cms.actions.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\alerts\\CmsAlert.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\cms.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\fetch.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\user.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\general.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\hero.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\utils\\constants\\alert.constants.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\firebase\\fireAuth.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\user.actions.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\hero.actions.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\fetch.actions.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\actions\\alert.actions.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\hero\\container.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\layout\\nav\\style.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\alerts\\index.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\pages\\public\\blog\\container.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\validation.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\utils.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\utils.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\login\\validation.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\SecondStep.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\feature\\auth\\signup\\FirstStep.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\loadings\\DefaultLoader.jsx",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\hero\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\general\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\alerts\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\cms\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\auth\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\store\\reducers\\database\\index.js",[],"C:\\Users\\Maciej\\Desktop\\SARO\\saro-react\\src\\components\\shared\\CustomCookies.jsx",[],{"ruleId":"343","severity":1,"message":"344","line":18,"column":6,"nodeType":"345","endLine":18,"endColumn":15,"suggestions":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":43,"column":15,"nodeType":"353","endLine":43,"endColumn":61},{"ruleId":"351","severity":1,"message":"352","line":48,"column":15,"nodeType":"353","endLine":48,"endColumn":62},{"ruleId":"351","severity":1,"message":"352","line":53,"column":15,"nodeType":"353","endLine":53,"endColumn":60},{"ruleId":"343","severity":1,"message":"354","line":45,"column":6,"nodeType":"345","endLine":45,"endColumn":8,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":32,"column":5,"nodeType":"358","messageId":"359","endLine":32,"endColumn":14},{"ruleId":"343","severity":1,"message":"354","line":38,"column":6,"nodeType":"345","endLine":38,"endColumn":8,"suggestions":"360"},{"ruleId":"343","severity":1,"message":"361","line":74,"column":6,"nodeType":"345","endLine":74,"endColumn":8,"suggestions":"362"},{"ruleId":"343","severity":1,"message":"363","line":81,"column":6,"nodeType":"345","endLine":81,"endColumn":8,"suggestions":"364"},{"ruleId":"343","severity":1,"message":"354","line":44,"column":6,"nodeType":"345","endLine":44,"endColumn":8,"suggestions":"365"},{"ruleId":"356","severity":1,"message":"366","line":1,"column":7,"nodeType":"358","messageId":"359","endLine":1,"endColumn":21},{"ruleId":"356","severity":1,"message":"367","line":11,"column":10,"nodeType":"358","messageId":"359","endLine":11,"endColumn":14},{"ruleId":"356","severity":1,"message":"368","line":11,"column":16,"nodeType":"358","messageId":"359","endLine":11,"endColumn":23},{"ruleId":"356","severity":1,"message":"369","line":11,"column":22,"nodeType":"358","messageId":"359","endLine":11,"endColumn":35},{"ruleId":"343","severity":1,"message":"370","line":46,"column":6,"nodeType":"345","endLine":46,"endColumn":8,"suggestions":"371"},{"ruleId":"356","severity":1,"message":"372","line":70,"column":15,"nodeType":"358","messageId":"359","endLine":70,"endColumn":27},{"ruleId":"356","severity":1,"message":"373","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"374","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["375"],"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchCrew'. Either include it or remove the dependency array.",["378"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar",["379"],"React Hook useEffect has missing dependencies: 'getEvent', 'id', and 'type'. Either include them or remove the dependency array.",["380"],"React Hook useEffect has missing dependencies: 'getEvents', 'getNews', and 'getPosts'. Either include them or remove the dependency array.",["381"],["382"],"'BUTTONS_HELPER' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'setIsReversed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getEvents' and 'getHero'. Either include them or remove the dependency array.",["383"],"'buttonAction' is assigned a value but never used.","'useState' is defined but never used.","'FORM_HELPER' is defined but never used.",{"desc":"384","fix":"385"},"no-global-assign","no-unsafe-negation",{"desc":"386","fix":"387"},{"desc":"386","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"386","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [dispatch, history]",{"range":"396","text":"397"},"Update the dependencies array to be: [fetchCrew]",{"range":"398","text":"399"},{"range":"400","text":"399"},"Update the dependencies array to be: [getEvent, id, type]",{"range":"401","text":"402"},"Update the dependencies array to be: [getEvents, getNews, getPosts]",{"range":"403","text":"404"},{"range":"405","text":"399"},"Update the dependencies array to be: [getEvents, getHero]",{"range":"406","text":"407"},[476,485],"[dispatch, history]",[999,1001],"[fetchCrew]",[875,877],[1341,1343],"[getEvent, id, type]",[2568,2570],"[getEvents, getNews, getPosts]",[993,995],[1295,1297],"[getEvents, getHero]"]